#####################################################
#  ENABLE THE PLATFORM BUILD ON NEWER DOCKER BUILD  #
#   ON OLD CORINTH SERVER, IT HAVING PLATFORM TAG   #
#                   CAUSES ERROR                    #
#####################################################

# Frontend Base Images
FROM node:22.12.0-alpine AS frontend_base
WORKDIR /app
COPY ./frontend/package*.json ./
RUN npm install

# Backend Base Images
FROM python:3.12.8-alpine AS backend_base
RUN apk add --no-cache curl
RUN mkdir -p /app
WORKDIR /app
RUN pip install poetry==2.0.1 && \
    poetry config virtualenvs.create false
# Copy poetry files
COPY ./backend/pyproject.toml ./backend/poetry.lock ./
RUN poetry install --without dev

# Run the backend service
FROM backend_base AS backend
CMD ["poetry", "run", "uvicorn", "main:app", "--host", "0.0.0.0", "--port", "8000", "--workers", "4"]

# Run the celery service
FROM backend_base AS celery
CMD ["poetry", "run", "celery", "-A", "celery_tasks.cel", "worker", "--loglevel=info"]

# Redis base image
FROM redis:alpine AS redis_prod
RUN mkdir -p /usr/local/etc/redis /data
CMD ["redis-server", "/usr/local/etc/redis/redis.conf"]

# Build and deploy
FROM frontend_base AS frontend_prod
COPY ./frontend ./
COPY ./configs /configs
RUN npm run build

# Nginx stage to serve the built files
FROM nginx:alpine AS frontend_server
# Create necessary cache directories and set permissions
RUN mkdir -p /var/cache/nginx/client_temp /var/run/nginx && \
    chmod -R 777 /var/cache/nginx /var/run/nginx /tmp
# Copy the global Nginx configuration
COPY nginx.conf /etc/nginx/nginx.conf
# Copy the virtual host configuration
COPY default.conf /etc/nginx/conf.d/default.conf
# Copy built files from the previous stage
COPY --from=frontend_prod /app/dist /usr/share/nginx/html
CMD ["nginx", "-g", "daemon off;"]


# OLLAMA setup
FROM ollama/ollama:0.6.4 AS ollama_server
# Copy the script to the docker image
COPY ./wait_for_ollama.sh /wait_for_ollama.sh
# Ensure the script is executable
RUN chmod +x /wait_for_ollama.sh
ENTRYPOINT ["/bin/sh", "/wait_for_ollama.sh"]