services:
  redis_server:
    build:
      context: .
      dockerfile: dockerfile_prod
      target: redis_prod
    image: fairway_redis
    container_name: fairway_redis_ct
    restart: unless-stopped
    hostname: redis
    volumes:
      - ./redis.conf:/usr/local/etc/redis/redis.conf
      - /home/asharma/Data/Logs/redis_logs:/var/log/redis
      - /home/asharma/Data/Redis:/data
    expose:
      - "6379"
    networks:
      - fairway-app-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 8s
      retries: 10
      start_period: 4s

  backend:
    build:
      context: .
      dockerfile: dockerfile_prod
      target: backend
    image: fairway_backend
    container_name: fairway_backend_ct
    restart: unless-stopped
    volumes:
      - ./backend:/app
      - ./configs:/configs
      - /home/asharma/Data/Logs:/var/logs
      - /home/asharma/Data/Feedbacks:/app/data
    depends_on:
      redis_server:
        condition: service_healthy
      celery_workers:
        condition: service_started
    env_file: "./backend/.env"
    networks:
      - fairway-app-network
    expose:
      - "8000"
    user: "1014:1014"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      timeout: 15s
      retries: 5
      start_period: 8s
      interval: 45s

  # Celery Workers
  celery_workers:
    build:
      context: .
      dockerfile: dockerfile_prod
      target: celery
    image: fairway_celery_workers
    container_name: fairway_celery_ct
    restart: unless-stopped
    volumes:
      - ./backend:/app
      - ./configs:/configs
      - /home/asharma/Data/Logs:/var/logs
    depends_on:
      redis_server:
        condition: service_healthy
    networks:
      - fairway-app-network
    user: "1014:1014"

  # TODO: Handle this later on
  # flower:
  #   volumes:
  #     - ./backend:/app
  #   ports:
  #     - "5555:5555"
  #   depends_on:
  #     - redis_server
  #   command: ["celery", "-A", "celery_tasks.cel", "flower", "--loglevel=info"]

  # Frontend vuejs application
  frontend_server:
    build:
      context: .
      dockerfile: dockerfile_prod
      target: frontend_server
    image: fairway_frontend
    container_name: fairway_frontend_ct
    volumes:
      - ./configs:/configs
    depends_on:
      backend:
        condition: service_healthy
      redis_server:
        condition: service_healthy
      celery_workers:
        condition: service_started
      fairway_ollama:
        condition: service_started
    ports:
      - "8011:80"
    networks:
      - fairway-app-network
    user: "1014:1014"

  # Important NOTE:- If the models aren't downloaded, simply start ONLY this service and the models will be downloaded
  fairway_ollama:
    build:
      context: .
      dockerfile: dockerfile_prod
      target: ollama_server
    image: fairway_ollama
    container_name: fairway_ollama_ct
    volumes:
      - /home/asharma/Data/.ollama:/root/.ollama
    restart: unless-stopped
    expose:
      - "11434"
    networks:
      - fairway-app-network
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: all
              capabilities: [gpu]

networks:
  fairway-app-network:
    external: false
    driver: bridge